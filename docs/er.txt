// Organizations --------------------------------

table Institute {
    institute_id integer
    name varchar
    address1 varchar
    address2 varchar
    email varchar

    created timestamp
    updated timestamp
}

// User -----------------------------------------

table User {
    user_id integer
    institute_id integer 

    username varchar
    name varchar
    email varchar
    phone varchar
    password varchar
    is_google_login bool

    // roles -> STUDENT, TEACHER, INSTITUTE_OWNER, INSTITUTE_ADMIN, ROOT?
    role varchar
    
    created timestamp
    updated timestamp
    last_login timestamp
}

table Permission {
    permission_id integer
    name varchar
}

table Role_Permission {
    role_name varchar
    perm_id integer
}

table ReferralCode {
  ref_code_id integer
  code string
  user_id integer

  created timestamp
  updated timestamp
}

table ReferralCodeUsage {
  ref_code_id integer
  usage_user_id integer
}

// Plan -----------------------------------------

table User_Plan{
  user_plan_id integer
  user_id integer
  plan_id integer

  purchase_date timestamp
  validity_from timestamp
  validity_to timestamp
  
  cancellation_date date
  auto_renewal boolean
  discount_coupon_id integer
  referral_code_id integer
}

table Transaction {
  transaction_id integer
  user_id integer

  payment_for string
  payment_mode string
  payment_unique_id string
  payment_status string
  payment_date timestamp

  transaction_response_code string
  transaction_response_message string
}

table DiscountCoupon {
  discount_coupon_id integer

  coupon_name string
  creation_date timestamp
  validity_from timestamp
  validity_to timestamp

  linked_user_id integer // can be null for all users
}

table DiscountCouponApplicablePlans {
  discount_coupon_id integer
  plan_id integer
}

table Plan {
  plan_id integer
  plan_name string
  basic_playlist_access boolean
  playlist_creation boolean
  playlist_creation_count integer
  self_audio boolean  
  number_of_teachers integer 
  plan_validity integer
  plan_user string
}

table Currency {
  currency_id integer
  short_tag string
}

table PlanPricing {
  plan_pricing_id integer
  plan_id integer
  denomination integer
  currency_id integer
}

// MONGO : Resources, Combo, Playlist ----------------------------------------

// TODO
table Asana {
  asana_id objectid

  is_free boolean
  video_url string
  
  status string // public/private
}

// TODO
table Markers {
  asana_id objectid

  markers list // list of time_tag, step, desc
  description string
}

// TODO
table Image {
    image_id objectid
}

// TODO
table Audio {
    audio_id objectid
}

// TODO
table Text {
    text_id objectid
}

table Combination {
    combination_id objectid
    user_id integer
    // institute?
    name varchar
    desc varchar

    items list // (asana)*(audio)*(image)*(text)* in order of combination

    created timestamp
    updated timestamp
}

table Playlist {
    playlist_id objectid
    user_id integer
    name varchar
    desc varchar

    items list // (asana)*(combination)* in order of playlist

    created timestamp
    updated timestamp
}

Ref: "User"."institute_id" < "Institute"."institute_id"

Ref: "User_Plan"."plan_id" < "Plan"."plan_id"

Ref: "User_Plan"."user_id" < "User"."user_id"

Ref: "Transaction"."user_id" < "User"."user_id"

Ref: "DiscountCouponApplicablePlans"."plan_id" < "Plan"."plan_id"

Ref: "Markers"."asana_id" < "Asana"."asana_id"

Ref: "Role_Permission"."perm_id" < "Permission"."permission_id"

Ref: "ReferralCode"."user_id" < "User"."user_id"

Ref: "ReferralCodeUsage"."usage_user_id" < "User"."user_id"

Ref: "ReferralCodeUsage"."ref_code_id" < "ReferralCode"."ref_code_id"

Ref: "DiscountCoupon"."linked_user_id" < "User"."user_id"

Ref: "DiscountCouponApplicablePlans"."discount_coupon_id" < "DiscountCoupon"."discount_coupon_id"

Ref: "PlanPricing"."currency_id" < "Currency"."currency_id"

Ref: "PlanPricing"."plan_id" < "Plan"."plan_id"








-------------------------------------------------------------
playlist = <playlist_id, playlist_name, item_combo_list>
asana = <asana_id, asana_name, .....>
combination = <combo_id, combo_name, .......>
example : <P1, "beginner", [A1, C5, A4, A4, C2, C6, A5]>
-------------------------------------------------------------
4 types of resources : 
video, audio, image, text <can be uploaded by 6am admin>
-------------------------------------------------------------
3 types of data types :  asana(has only video), 
combination(can have multiple videos, audios and images), 
playlist(can have multiple asanas and combinations within)
-------------------------------------------------------------
soo, admin can :
1. insert new asana, upload audio, images, text
2. create a new combination (using prev uploads)
3. create playlist (can have asanas and combinations)
-------------------------------------------------------------
so if ur saying that u wanna combine asana and combination as one type, idm it but like
i thought registering it would be difficult
cuz normally when u register a new asana you just upload video give it a name and finish
so when ur registering combination u can use registered asanas
whereas if u combine itll be more logical computations to create individual asana and computations
-------------------------------------------------------------


asana -> video
combination -> (asana)*(audio)*(image)*(text)*
playlist -> (asana)*(combination)*